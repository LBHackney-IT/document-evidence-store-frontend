version: 2.1

orbs:
  cypress: cypress-io/cypress@1
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  node:
    docker:
      - image: circleci/node:14
    working_directory: ~/project
  python:
    docker:
      - image: circleci/python:3.7

references:
  workspace_root: &workspace_root '~'
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

commands:
  assume-role-and-persist-workspace:
    description: 'Assumes deployment role and persists credentials across jobs'
    parameters:
      aws-account:
        type: string
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: <<parameters.aws-account>>
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  deploy-lambda:
    description: 'Deploys application'
    parameters:
      stage:
        type: string
        default: staging
    steps:
      - run:
          name: Deploy application
          command: |
            npm prune --production
            sudo npm i -g serverless
            sls deploy -s <<parameters.stage>>

jobs:
  test:
    executor: node
    environment:
      NODE_ENV: ci

    steps:
      - *attach_workspace
      - checkout

      - run:
          name: Run linter
          command: npm run lint

      - run:
          name: Run prettier
          command: npm run prettier:test

      - run:
          name: Run unit tests
          command: npm run test:unit -- --maxWorkers=2

  owasp-zap-baseline-scan:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - checkout
      - *attach_workspace

      - run:
          name: Run application in background
          command: npm start
          background: true

      - run:
          name: Pull owasp zap docker image
          command: docker pull owasp/zap2docker-stable:2.10.0

      - run:
          name: ZAP baseline test of application
          # It will exit with codes of:
          # 0: Success
          # 1: At least 1 FAIL
          # 2: At least one WARN and no FAILs
          # 3: Any other failure
          # Link to above:https://github.com/zaproxy/zaproxy/blob/main/docker/zap-baseline.py#L31-L35
          command: |
            (
              docker run -t owasp/zap2docker-stable:2.10.0 zap-baseline.py \
              -j \
              -u https://raw.githubusercontent.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}/zap-baseline.conf \
              -t http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):3000 || \
              if [[ $? == 0 || $? == 2 ]]; then exit 0; else exit 1; fi;
            )

  assume-role-staging:
    executor: python
    steps:
      - assume-role-and-persist-workspace:
          aws-account: $AWS_ACCOUNT_STAGING

  assume-role-production:
    executor: python
    steps:
      - assume-role-and-persist-workspace:
          aws-account: $AWS_ACCOUNT_PRODUCTION

  deploy-staging:
    executor: node

    steps:
      - *attach_workspace
      - checkout

      - deploy-lambda:
          stage: staging

  deploy-production:
    executor: node

    steps:
      - *attach_workspace
      - checkout

      - deploy-lambda:
          stage: production

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - cypress/install: # Use Cypress step to install and cache dependencies
          build: npm run build
          executor: cypress/base-12
          post-checkout:
            - run: cp .env.sample .env

      - test:
          requires:
            - cypress/install

      - cypress/run:
          requires:
            - cypress/install
          executor: cypress/base-12
          attach-workspace: true
          start: npm run start:ci
          wait-on: 'http-get://127.0.0.1:3000/api/ping'
          store_artifacts: true

      - owasp-zap-baseline-scan:
          requires:
            - test
            - cypress/run

      - assume-role-staging:
          context: api-assume-role-document-evidence-store-staging-context
          requires:
            - cypress/run
            - test
          filters:
            branches:
              only:
                - main

      - deploy-staging:
          requires:
            - assume-role-staging

      - permit-deploy-production:
          type: approval
          requires:
            - deploy-staging

      - assume-role-production:
          context: api-assume-role-document-evidence-store-production-context
          requires:
            - permit-deploy-production

      - deploy-production:
          requires:
            - assume-role-production
