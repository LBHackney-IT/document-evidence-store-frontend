version: 2.1

orbs:
  cypress: cypress-io/cypress@1
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  node:
    docker:
      - image: circleci/node:14
    working_directory: ~/project

commands:
  assume-role:
    description: 'Assumes deployment role and persists credentials across jobs'
    parameters:
      aws-account:
        type: string
    steps:
      - aws_assume_role/assume_role:
          account: <<parameters.aws-account>>
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
jobs:
  test:
    executor: node

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Run linter
          command: npm run lint

      - run:
          name: Run prettier
          command: npm run prettier:test

      - run:
          name: Run unit tests
          command: npm run test:unit

  deploy-staging:
    executor: node

    steps:
      - attach_workspace:
          at: ~/

      - assume-role:
          aws-account: $AWS_ACCOUNT_STAGING

      - run:
          name: Deploy application
          environment:
            NODE_ENV: production
          command: |
            ./node_modules/serverless/bin/serverless.js deploy -s staging

  deploy-production:
    executor: node

    steps:
      - attach_workspace:
          at: ~/

      - assume-role:
          aws-account: $AWS_ACCOUNT_PRODUCTION

      - run:
          name: Deploy application
          environment:
            NODE_ENV: production
          command: |
            ./node_modules/serverless/bin/serverless.js deploy -s production

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - cypress/install: # Use Cypress step to install and cache dependencies
          build: npm run build

      - test:
          requires:
            - cypress/install

      - cypress/run:
          requires:
            - cypress/install
          executor: cypress/base-14
          attach-workspace: true
          start: npm run start
          wait-on: 'http-get://127.0.0.1:3000'

      - deploy-staging:
          context: api-assume-role-staging-context
          requires:
            - test
            - cypress/run
          filters:
            branches:
              only:
                - main

      # - permit-deploy-production:
      #     type: approval
      #     requires:
      #       - deploy-staging
      # - deploy-production:
      #     requires:
      #       - permit-deploy-production
